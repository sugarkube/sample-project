# This manifest bootstraps a k8s cluster with services that should alwasy be
# installed, regardless of whether running on a cloud provider or locally. First
# it installs tiller, then installs cert-manager then nginx ingress. Because
# kapps must be installed in exactly that order, parallelism is disabled for
# this manifest.
#
# This manifest could be a good place to put other universal, cluster-wide
# kapps, e.g. for pod security policies, RBAC, etc.

# Kapps listed under this key will be installed if they are not currently
# installed in the target cluster.
options:
  sequential: true      # kapps in this manifest must be installed in order

kapps:
  - id: tiller
    depends_on:
      - id: prelaunch:no-op
        conditions:
          - "{{ eq .stack.provisioner \"minikube\" }}"
      - id: prelaunch:terraform-bucket
        conditions:
          - "{{ eq .stack.provider \"aws\" }}"
      - id: prelaunch:public-hosted-zone
        conditions:
          - "{{ eq .stack.provisioner \"eks\" }}"       # conditions can use any available variable
    sources:
      - uri: https://github.com/sugarkube/kapps.git//incubator/tiller#tiller-0.1.0
  # Multiple sources can be defined, e.g.
  #      - uri: https://github.com/sugarkube/kapps.git//incubator/common-makefiles#master

  # The default installer for manifests is stored in config so we don't need
  # to add it to every entry. But we could in future with e.g. `installer: my-installer`

  # The simplest manifest entry uses defaults for e.g. the helm namespace,
  # chart name, etc. when using `helm` as the installer.
  - id: cert-manager       # Manifest-unique identifier.
    # Sources to checkout as siblings in the cache for this kapp. This allows
    # creating a cache entry from e.g. the actual kapp source, a directory of
    # shared makefiles, and/or pulling in `values.yaml` files etc. from a
    # separately versioned source.
    sources:
      # sources are downloaded by `acquirers`. Currently we only have a git
      # acquirer, and the acquirer to use is inferred from the uri. Other
      # settings are specific to the acquirer.
      - uri: https://github.com/sugarkube/kapps.git//incubator/cert-manager#cert-manager-0.2.0

  # This will create a LoadBalancer ingress on AWS or a NodePort otherwise
  - id: nginx1      # this can be anything - it doesn't need to relate to the name of any source
    sources:
      - uri: https://github.com/sugarkube/kapps.git//incubator/nginx-ingress#nginx-ingress-0.1.0
    vars:
      cert_manager_kind: "{{ .outputs.cert_manager.clusterIssuer.kind }}"
      cert_manager_name: "{{ .outputs.cert_manager.clusterIssuer.metadata.name }}"
      main_kapp_dir: nginx-ingress      # because the kapp ID is different to the main directory in the workspace we need
                                        # to tell sugarkube which directory contains the kapp's sugarkube.yaml file

  # If you wanted another ingress you could create it like this:
#  - id: nginx2       # this can be anything - it doesn't need to relate to the name of any source
#    sources:
#      - uri: https://github.com/sugarkube/kapps.git//incubator/nginx-ingress#nginx-ingress-0.1.0
#    vars:
#      cert_manager_kind: "{{ .outputs.cert_manager.clusterIssuer.kind }}"
#      cert_manager_name: "{{ .outputs.cert_manager.clusterIssuer.metadata.name }}"
#      main_kapp_dir: nginx-ingress
