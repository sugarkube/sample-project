# This creates infrastructure that must exist before launching a kops cluster.
# It creates an S3 bucket for Terraform remote state (not strictly necessary
# but a fiddly task that should be done before running any other kapps) and
# a hosted zone. It should be run as an initManifest so it gets executed before
# creating a cluster.
#
# If you're running on a different provider, you could either reimplement these
# kapps for your provider or create a `terraform_<provider>` directory in each
# one so a single kapp can support multiple clouds.
options:
  sequential: true      # kapps in this manifest must be installed in order. This makes each kapp depend on
                        # the preceding one without needing to explicitly define each dependency.

kapps:
  - id: kops-image
    sources:
      - uri: https://github.com/sugarkube/kapps.git//incubator/kops-image#kops-image-0.1.0
    conditions:
      - "{{ eq .stack.provisioner \"kops\" }}"        # only execute this when using kops
    vars:
      region: "{{ .stack.region }}"

  - id: terraform-bucket
    sources:
      - uri: https://github.com/sugarkube/kapps.git//incubator/terraform-bucket#terraform-bucket-0.1.0
    templates:
    # this kapp will add a '.tf' extension after creating an S3 bucket
    # for remote terraform state and copying the state over to it. That way
    # subsequent runs will use the remote state directly.
      backend:
        source: terraform/backend.tf
        dest: terraform_aws/_generated_backend

  # creates a private hosted zone and a temporary placeholder VPC before kicking
  # off the cluster update
  - id: private-hosted-zone
    conditions:
    - "{{ eq .stack.provisioner \"kops\" }}"        # only execute this when using kops
    sources:
      - uri: https://github.com/sugarkube/kapps.git//incubator/private-hosted-zone#private-hosted-zone-0.1.0
    post_install_actions:
      - cluster_update:     # makes Sugarkube actually create the cluster

  # run the same kapp again. It will detect the VPC created by Kops and associate
  # it with the private hosted zone, then delete the temporary placeholder VPC.
  - id: private-hosted-zone-clean-up
    conditions:
    - "{{ eq .stack.provisioner \"kops\" }}"
    sources:
      - uri: https://github.com/sugarkube/kapps.git//incubator/private-hosted-zone#private-hosted-zone-0.1.0
    pre_delete_actions:
      - cluster_delete:         # before deleting this kapp delete the target cluster
