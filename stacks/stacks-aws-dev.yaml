defaults: &defaults
  provider: aws
  provisioner: kops
  account: dev
  profile: dev
  region: eu-west-2
  provider_vars_dirs:   # YAML files under here will be recursively merged. Used to configure
    - ../providers/    # providers. Errors will be thrown if expected dirs don't exist.
  kapp_vars_dirs:       # YAML files under these directories will be recursively merged
    - ../kapp-vars/         # and values passed to kapps to alter them per profile/manifest/etc.
  template_dirs:
    - ../templates/    # paths to template files that can be used by kapps

aws-dev1:
  <<: *defaults
  cluster: dev1
  manifests:
    # if no protocol is given, file:// is assumed.
    - uri: ../manifests/pre-launch-dependencies.yaml
    - uri: ../manifests/bootstrap-cluster.yaml
    - uri: ../manifests/core-aws.yaml
    - uri: ../manifests/security.yaml
    - uri: ../manifests/ci-cd.yaml
    - uri: ../manifests/wordpress-sites.yaml
      id: wordpress
      # Data in manifests can be overridden in stack files like this to e.g. specify the branch of a source to be used
      # or to modify the values of kapp variables. This lets you use a single manifest across multiple environments
      # (e.g. dev/staging/prod) just tweaking a few values instead of maintaining multiplle different copies of manifests.
      overrides:
        wordpress-site2:
          state: present
          sources:
            wordpress:
              options:
                branch: 1.0.2   # you can override just the branch component or you could specify
                                # an entirely different URI.

      # To control rolling out a new kapp for the first time either set the state to absent in the
      # manifest file and then opt into it in each stack, or do the opposite, set state: present
      # and opt out of it in specific stacks.
